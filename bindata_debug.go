// Code generated by go-bindata.
// sources:
// data/help/config
// data/help/download
// data/help/help
// data/help/rest
// data/reference/eng
// data/reference/example
// data/web/static/css/stylesheet.css
// data/web/static/favicon.ico
// data/web/static/js/ldss.js
// data/web/static/svg/ICON-LICENSE
// data/web/static/svg/README.md
// data/web/static/svg/account-login.svg
// data/web/static/svg/account-logout.svg
// data/web/static/svg/action-redo.svg
// data/web/static/svg/action-undo.svg
// data/web/static/svg/align-center.svg
// data/web/static/svg/align-left.svg
// data/web/static/svg/align-right.svg
// data/web/static/svg/aperture.svg
// data/web/static/svg/arrow-bottom.svg
// data/web/static/svg/arrow-circle-bottom.svg
// data/web/static/svg/arrow-circle-left.svg
// data/web/static/svg/arrow-circle-right.svg
// data/web/static/svg/arrow-circle-top.svg
// data/web/static/svg/arrow-left.svg
// data/web/static/svg/arrow-right.svg
// data/web/static/svg/arrow-thick-bottom.svg
// data/web/static/svg/arrow-thick-left.svg
// data/web/static/svg/arrow-thick-right.svg
// data/web/static/svg/arrow-thick-top.svg
// data/web/static/svg/arrow-top.svg
// data/web/static/svg/audio-spectrum.svg
// data/web/static/svg/audio.svg
// data/web/static/svg/badge.svg
// data/web/static/svg/ban.svg
// data/web/static/svg/bar-chart.svg
// data/web/static/svg/basket.svg
// data/web/static/svg/battery-empty.svg
// data/web/static/svg/battery-full.svg
// data/web/static/svg/beaker.svg
// data/web/static/svg/bell.svg
// data/web/static/svg/bluetooth.svg
// data/web/static/svg/bold.svg
// data/web/static/svg/bolt.svg
// data/web/static/svg/book.svg
// data/web/static/svg/bookmark.svg
// data/web/static/svg/box.svg
// data/web/static/svg/briefcase.svg
// data/web/static/svg/british-pound.svg
// data/web/static/svg/browser.svg
// data/web/static/svg/brush.svg
// data/web/static/svg/bug.svg
// data/web/static/svg/bullhorn.svg
// data/web/static/svg/calculator.svg
// data/web/static/svg/calendar.svg
// data/web/static/svg/camera-slr.svg
// data/web/static/svg/caret-bottom.svg
// data/web/static/svg/caret-left.svg
// data/web/static/svg/caret-right.svg
// data/web/static/svg/caret-top.svg
// data/web/static/svg/cart.svg
// data/web/static/svg/chat.svg
// data/web/static/svg/check.svg
// data/web/static/svg/chevron-bottom.svg
// data/web/static/svg/chevron-left.svg
// data/web/static/svg/chevron-right.svg
// data/web/static/svg/chevron-top.svg
// data/web/static/svg/circle-check.svg
// data/web/static/svg/circle-x.svg
// data/web/static/svg/clipboard.svg
// data/web/static/svg/clock.svg
// data/web/static/svg/cloud-download.svg
// data/web/static/svg/cloud-upload.svg
// data/web/static/svg/cloud.svg
// data/web/static/svg/cloudy.svg
// data/web/static/svg/code.svg
// data/web/static/svg/cog.svg
// data/web/static/svg/collapse-down.svg
// data/web/static/svg/collapse-left.svg
// data/web/static/svg/collapse-right.svg
// data/web/static/svg/collapse-up.svg
// data/web/static/svg/command.svg
// data/web/static/svg/comment-square.svg
// data/web/static/svg/compass.svg
// data/web/static/svg/contrast.svg
// data/web/static/svg/copywriting.svg
// data/web/static/svg/credit-card.svg
// data/web/static/svg/crop.svg
// data/web/static/svg/dashboard.svg
// data/web/static/svg/data-transfer-download.svg
// data/web/static/svg/data-transfer-upload.svg
// data/web/static/svg/delete.svg
// data/web/static/svg/dial.svg
// data/web/static/svg/document.svg
// data/web/static/svg/dollar.svg
// data/web/static/svg/double-quote-sans-left.svg
// data/web/static/svg/double-quote-sans-right.svg
// data/web/static/svg/double-quote-serif-left.svg
// data/web/static/svg/double-quote-serif-right.svg
// data/web/static/svg/droplet.svg
// data/web/static/svg/eject.svg
// data/web/static/svg/elevator.svg
// data/web/static/svg/ellipses.svg
// data/web/static/svg/envelope-closed.svg
// data/web/static/svg/envelope-open.svg
// data/web/static/svg/euro.svg
// data/web/static/svg/excerpt.svg
// data/web/static/svg/expand-down.svg
// data/web/static/svg/expand-left.svg
// data/web/static/svg/expand-right.svg
// data/web/static/svg/expand-up.svg
// data/web/static/svg/external-link.svg
// data/web/static/svg/eye.svg
// data/web/static/svg/eyedropper.svg
// data/web/static/svg/file.svg
// data/web/static/svg/fire.svg
// data/web/static/svg/flag.svg
// data/web/static/svg/flash.svg
// data/web/static/svg/folder.svg
// data/web/static/svg/fork.svg
// data/web/static/svg/fullscreen-enter.svg
// data/web/static/svg/fullscreen-exit.svg
// data/web/static/svg/globe.svg
// data/web/static/svg/graph.svg
// data/web/static/svg/grid-four-up.svg
// data/web/static/svg/grid-three-up.svg
// data/web/static/svg/grid-two-up.svg
// data/web/static/svg/hard-drive.svg
// data/web/static/svg/header.svg
// data/web/static/svg/headphones.svg
// data/web/static/svg/heart.svg
// data/web/static/svg/home.svg
// data/web/static/svg/image.svg
// data/web/static/svg/inbox.svg
// data/web/static/svg/infinity.svg
// data/web/static/svg/info.svg
// data/web/static/svg/italic.svg
// data/web/static/svg/justify-center.svg
// data/web/static/svg/justify-left.svg
// data/web/static/svg/justify-right.svg
// data/web/static/svg/key.svg
// data/web/static/svg/laptop.svg
// data/web/static/svg/layers.svg
// data/web/static/svg/lightbulb.svg
// data/web/static/svg/link-broken.svg
// data/web/static/svg/link-intact.svg
// data/web/static/svg/list-rich.svg
// data/web/static/svg/list.svg
// data/web/static/svg/location.svg
// data/web/static/svg/lock-locked.svg
// data/web/static/svg/lock-unlocked.svg
// data/web/static/svg/loop-circular.svg
// data/web/static/svg/loop-square.svg
// data/web/static/svg/loop.svg
// data/web/static/svg/magnifying-glass.svg
// data/web/static/svg/map-marker.svg
// data/web/static/svg/map.svg
// data/web/static/svg/media-pause.svg
// data/web/static/svg/media-play.svg
// data/web/static/svg/media-record.svg
// data/web/static/svg/media-skip-backward.svg
// data/web/static/svg/media-skip-forward.svg
// data/web/static/svg/media-step-backward.svg
// data/web/static/svg/media-step-forward.svg
// data/web/static/svg/media-stop.svg
// data/web/static/svg/medical-cross.svg
// data/web/static/svg/menu.svg
// data/web/static/svg/microphone.svg
// data/web/static/svg/minus.svg
// data/web/static/svg/monitor.svg
// data/web/static/svg/moon.svg
// data/web/static/svg/move.svg
// data/web/static/svg/musical-note.svg
// data/web/static/svg/paperclip.svg
// data/web/static/svg/pencil.svg
// data/web/static/svg/people.svg
// data/web/static/svg/person.svg
// data/web/static/svg/phone.svg
// data/web/static/svg/pie-chart.svg
// data/web/static/svg/pin.svg
// data/web/static/svg/play-circle.svg
// data/web/static/svg/plus.svg
// data/web/static/svg/power-standby.svg
// data/web/static/svg/print.svg
// data/web/static/svg/project.svg
// data/web/static/svg/pulse.svg
// data/web/static/svg/puzzle-piece.svg
// data/web/static/svg/question-mark.svg
// data/web/static/svg/rain.svg
// data/web/static/svg/random.svg
// data/web/static/svg/reload.svg
// data/web/static/svg/resize-both.svg
// data/web/static/svg/resize-height.svg
// data/web/static/svg/resize-width.svg
// data/web/static/svg/rss-alt.svg
// data/web/static/svg/rss.svg
// data/web/static/svg/script.svg
// data/web/static/svg/share-boxed.svg
// data/web/static/svg/share.svg
// data/web/static/svg/shield.svg
// data/web/static/svg/signal.svg
// data/web/static/svg/signpost.svg
// data/web/static/svg/sort-ascending.svg
// data/web/static/svg/sort-descending.svg
// data/web/static/svg/spreadsheet.svg
// data/web/static/svg/star.svg
// data/web/static/svg/sun.svg
// data/web/static/svg/tablet.svg
// data/web/static/svg/tag.svg
// data/web/static/svg/tags.svg
// data/web/static/svg/target.svg
// data/web/static/svg/task.svg
// data/web/static/svg/terminal.svg
// data/web/static/svg/text.svg
// data/web/static/svg/thumb-down.svg
// data/web/static/svg/thumb-up.svg
// data/web/static/svg/timer.svg
// data/web/static/svg/transfer.svg
// data/web/static/svg/trash.svg
// data/web/static/svg/underline.svg
// data/web/static/svg/vertical-align-bottom.svg
// data/web/static/svg/vertical-align-center.svg
// data/web/static/svg/vertical-align-top.svg
// data/web/static/svg/video.svg
// data/web/static/svg/volume-high.svg
// data/web/static/svg/volume-low.svg
// data/web/static/svg/volume-off.svg
// data/web/static/svg/warning.svg
// data/web/static/svg/wifi.svg
// data/web/static/svg/wrench.svg
// data/web/static/svg/x.svg
// data/web/static/svg/yen.svg
// data/web/static/svg/zoom-in.svg
// data/web/static/svg/zoom-out.svg
// data/web/templates/403.tpl
// data/web/templates/layout.tpl
// data/web/templates/node-children.tpl
// data/web/templates/node-content.tpl
// data/web/templates/search-results.tpl
// DO NOT EDIT!

// +build !release

package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
)

// bindataRead reads the given file from disk. It returns an error on failure.
func bindataRead(path, name string) ([]byte, error) {
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset %s at %s: %v", name, path, err)
	}
	return buf, err
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

// dataHelpConfig reads file data from disk. It returns an error on failure.
func dataHelpConfig() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/help/config"
	name := "data/help/config"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataHelpDownload reads file data from disk. It returns an error on failure.
func dataHelpDownload() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/help/download"
	name := "data/help/download"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataHelpHelp reads file data from disk. It returns an error on failure.
func dataHelpHelp() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/help/help"
	name := "data/help/help"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataHelpRest reads file data from disk. It returns an error on failure.
func dataHelpRest() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/help/rest"
	name := "data/help/rest"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataReferenceEng reads file data from disk. It returns an error on failure.
func dataReferenceEng() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/reference/eng"
	name := "data/reference/eng"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataReferenceExample reads file data from disk. It returns an error on failure.
func dataReferenceExample() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/reference/example"
	name := "data/reference/example"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticCssStylesheetCss reads file data from disk. It returns an error on failure.
func dataWebStaticCssStylesheetCss() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/css/stylesheet.css"
	name := "data/web/static/css/stylesheet.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticFaviconIco reads file data from disk. It returns an error on failure.
func dataWebStaticFaviconIco() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/favicon.ico"
	name := "data/web/static/favicon.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticJsLdssJs reads file data from disk. It returns an error on failure.
func dataWebStaticJsLdssJs() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/js/ldss.js"
	name := "data/web/static/js/ldss.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgIconLicense reads file data from disk. It returns an error on failure.
func dataWebStaticSvgIconLicense() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/ICON-LICENSE"
	name := "data/web/static/svg/ICON-LICENSE"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgReadmeMd reads file data from disk. It returns an error on failure.
func dataWebStaticSvgReadmeMd() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/README.md"
	name := "data/web/static/svg/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAccountLoginSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAccountLoginSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/account-login.svg"
	name := "data/web/static/svg/account-login.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAccountLogoutSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAccountLogoutSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/account-logout.svg"
	name := "data/web/static/svg/account-logout.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgActionRedoSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgActionRedoSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/action-redo.svg"
	name := "data/web/static/svg/action-redo.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgActionUndoSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgActionUndoSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/action-undo.svg"
	name := "data/web/static/svg/action-undo.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAlignCenterSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAlignCenterSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/align-center.svg"
	name := "data/web/static/svg/align-center.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAlignLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAlignLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/align-left.svg"
	name := "data/web/static/svg/align-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAlignRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAlignRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/align-right.svg"
	name := "data/web/static/svg/align-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgApertureSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgApertureSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/aperture.svg"
	name := "data/web/static/svg/aperture.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowBottomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowBottomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-bottom.svg"
	name := "data/web/static/svg/arrow-bottom.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowCircleBottomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowCircleBottomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-circle-bottom.svg"
	name := "data/web/static/svg/arrow-circle-bottom.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowCircleLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowCircleLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-circle-left.svg"
	name := "data/web/static/svg/arrow-circle-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowCircleRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowCircleRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-circle-right.svg"
	name := "data/web/static/svg/arrow-circle-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowCircleTopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowCircleTopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-circle-top.svg"
	name := "data/web/static/svg/arrow-circle-top.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-left.svg"
	name := "data/web/static/svg/arrow-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-right.svg"
	name := "data/web/static/svg/arrow-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowThickBottomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowThickBottomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-thick-bottom.svg"
	name := "data/web/static/svg/arrow-thick-bottom.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowThickLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowThickLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-thick-left.svg"
	name := "data/web/static/svg/arrow-thick-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowThickRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowThickRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-thick-right.svg"
	name := "data/web/static/svg/arrow-thick-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowThickTopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowThickTopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-thick-top.svg"
	name := "data/web/static/svg/arrow-thick-top.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgArrowTopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgArrowTopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/arrow-top.svg"
	name := "data/web/static/svg/arrow-top.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAudioSpectrumSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAudioSpectrumSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/audio-spectrum.svg"
	name := "data/web/static/svg/audio-spectrum.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgAudioSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgAudioSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/audio.svg"
	name := "data/web/static/svg/audio.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBadgeSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBadgeSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/badge.svg"
	name := "data/web/static/svg/badge.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBanSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBanSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/ban.svg"
	name := "data/web/static/svg/ban.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBarChartSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBarChartSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bar-chart.svg"
	name := "data/web/static/svg/bar-chart.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBasketSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBasketSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/basket.svg"
	name := "data/web/static/svg/basket.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBatteryEmptySvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBatteryEmptySvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/battery-empty.svg"
	name := "data/web/static/svg/battery-empty.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBatteryFullSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBatteryFullSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/battery-full.svg"
	name := "data/web/static/svg/battery-full.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBeakerSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBeakerSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/beaker.svg"
	name := "data/web/static/svg/beaker.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBellSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBellSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bell.svg"
	name := "data/web/static/svg/bell.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBluetoothSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBluetoothSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bluetooth.svg"
	name := "data/web/static/svg/bluetooth.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBoldSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBoldSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bold.svg"
	name := "data/web/static/svg/bold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBoltSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBoltSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bolt.svg"
	name := "data/web/static/svg/bolt.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBookSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBookSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/book.svg"
	name := "data/web/static/svg/book.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBookmarkSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBookmarkSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bookmark.svg"
	name := "data/web/static/svg/bookmark.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBoxSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBoxSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/box.svg"
	name := "data/web/static/svg/box.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBriefcaseSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBriefcaseSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/briefcase.svg"
	name := "data/web/static/svg/briefcase.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBritishPoundSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBritishPoundSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/british-pound.svg"
	name := "data/web/static/svg/british-pound.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBrowserSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBrowserSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/browser.svg"
	name := "data/web/static/svg/browser.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBrushSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBrushSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/brush.svg"
	name := "data/web/static/svg/brush.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBugSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBugSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bug.svg"
	name := "data/web/static/svg/bug.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgBullhornSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgBullhornSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/bullhorn.svg"
	name := "data/web/static/svg/bullhorn.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCalculatorSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCalculatorSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/calculator.svg"
	name := "data/web/static/svg/calculator.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCalendarSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCalendarSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/calendar.svg"
	name := "data/web/static/svg/calendar.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCameraSlrSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCameraSlrSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/camera-slr.svg"
	name := "data/web/static/svg/camera-slr.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCaretBottomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCaretBottomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/caret-bottom.svg"
	name := "data/web/static/svg/caret-bottom.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCaretLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCaretLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/caret-left.svg"
	name := "data/web/static/svg/caret-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCaretRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCaretRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/caret-right.svg"
	name := "data/web/static/svg/caret-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCaretTopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCaretTopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/caret-top.svg"
	name := "data/web/static/svg/caret-top.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCartSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCartSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/cart.svg"
	name := "data/web/static/svg/cart.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgChatSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgChatSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/chat.svg"
	name := "data/web/static/svg/chat.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCheckSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCheckSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/check.svg"
	name := "data/web/static/svg/check.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgChevronBottomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgChevronBottomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/chevron-bottom.svg"
	name := "data/web/static/svg/chevron-bottom.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgChevronLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgChevronLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/chevron-left.svg"
	name := "data/web/static/svg/chevron-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgChevronRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgChevronRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/chevron-right.svg"
	name := "data/web/static/svg/chevron-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgChevronTopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgChevronTopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/chevron-top.svg"
	name := "data/web/static/svg/chevron-top.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCircleCheckSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCircleCheckSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/circle-check.svg"
	name := "data/web/static/svg/circle-check.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCircleXSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCircleXSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/circle-x.svg"
	name := "data/web/static/svg/circle-x.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgClipboardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgClipboardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/clipboard.svg"
	name := "data/web/static/svg/clipboard.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgClockSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgClockSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/clock.svg"
	name := "data/web/static/svg/clock.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCloudDownloadSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCloudDownloadSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/cloud-download.svg"
	name := "data/web/static/svg/cloud-download.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCloudUploadSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCloudUploadSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/cloud-upload.svg"
	name := "data/web/static/svg/cloud-upload.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCloudSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCloudSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/cloud.svg"
	name := "data/web/static/svg/cloud.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCloudySvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCloudySvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/cloudy.svg"
	name := "data/web/static/svg/cloudy.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCodeSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCodeSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/code.svg"
	name := "data/web/static/svg/code.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCogSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCogSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/cog.svg"
	name := "data/web/static/svg/cog.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCollapseDownSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCollapseDownSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/collapse-down.svg"
	name := "data/web/static/svg/collapse-down.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCollapseLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCollapseLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/collapse-left.svg"
	name := "data/web/static/svg/collapse-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCollapseRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCollapseRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/collapse-right.svg"
	name := "data/web/static/svg/collapse-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCollapseUpSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCollapseUpSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/collapse-up.svg"
	name := "data/web/static/svg/collapse-up.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCommandSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCommandSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/command.svg"
	name := "data/web/static/svg/command.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCommentSquareSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCommentSquareSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/comment-square.svg"
	name := "data/web/static/svg/comment-square.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCompassSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCompassSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/compass.svg"
	name := "data/web/static/svg/compass.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgContrastSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgContrastSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/contrast.svg"
	name := "data/web/static/svg/contrast.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCopywritingSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCopywritingSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/copywriting.svg"
	name := "data/web/static/svg/copywriting.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCreditCardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCreditCardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/credit-card.svg"
	name := "data/web/static/svg/credit-card.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgCropSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgCropSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/crop.svg"
	name := "data/web/static/svg/crop.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDashboardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDashboardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/dashboard.svg"
	name := "data/web/static/svg/dashboard.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDataTransferDownloadSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDataTransferDownloadSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/data-transfer-download.svg"
	name := "data/web/static/svg/data-transfer-download.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDataTransferUploadSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDataTransferUploadSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/data-transfer-upload.svg"
	name := "data/web/static/svg/data-transfer-upload.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDeleteSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDeleteSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/delete.svg"
	name := "data/web/static/svg/delete.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDialSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDialSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/dial.svg"
	name := "data/web/static/svg/dial.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDocumentSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDocumentSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/document.svg"
	name := "data/web/static/svg/document.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDollarSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDollarSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/dollar.svg"
	name := "data/web/static/svg/dollar.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDoubleQuoteSansLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDoubleQuoteSansLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/double-quote-sans-left.svg"
	name := "data/web/static/svg/double-quote-sans-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDoubleQuoteSansRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDoubleQuoteSansRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/double-quote-sans-right.svg"
	name := "data/web/static/svg/double-quote-sans-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDoubleQuoteSerifLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDoubleQuoteSerifLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/double-quote-serif-left.svg"
	name := "data/web/static/svg/double-quote-serif-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDoubleQuoteSerifRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDoubleQuoteSerifRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/double-quote-serif-right.svg"
	name := "data/web/static/svg/double-quote-serif-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgDropletSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgDropletSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/droplet.svg"
	name := "data/web/static/svg/droplet.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEjectSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEjectSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/eject.svg"
	name := "data/web/static/svg/eject.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgElevatorSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgElevatorSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/elevator.svg"
	name := "data/web/static/svg/elevator.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEllipsesSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEllipsesSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/ellipses.svg"
	name := "data/web/static/svg/ellipses.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEnvelopeClosedSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEnvelopeClosedSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/envelope-closed.svg"
	name := "data/web/static/svg/envelope-closed.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEnvelopeOpenSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEnvelopeOpenSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/envelope-open.svg"
	name := "data/web/static/svg/envelope-open.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEuroSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEuroSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/euro.svg"
	name := "data/web/static/svg/euro.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgExcerptSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgExcerptSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/excerpt.svg"
	name := "data/web/static/svg/excerpt.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgExpandDownSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgExpandDownSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/expand-down.svg"
	name := "data/web/static/svg/expand-down.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgExpandLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgExpandLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/expand-left.svg"
	name := "data/web/static/svg/expand-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgExpandRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgExpandRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/expand-right.svg"
	name := "data/web/static/svg/expand-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgExpandUpSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgExpandUpSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/expand-up.svg"
	name := "data/web/static/svg/expand-up.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgExternalLinkSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgExternalLinkSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/external-link.svg"
	name := "data/web/static/svg/external-link.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEyeSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEyeSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/eye.svg"
	name := "data/web/static/svg/eye.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgEyedropperSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgEyedropperSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/eyedropper.svg"
	name := "data/web/static/svg/eyedropper.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFileSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFileSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/file.svg"
	name := "data/web/static/svg/file.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFireSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFireSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/fire.svg"
	name := "data/web/static/svg/fire.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFlagSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFlagSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/flag.svg"
	name := "data/web/static/svg/flag.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFlashSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFlashSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/flash.svg"
	name := "data/web/static/svg/flash.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFolderSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFolderSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/folder.svg"
	name := "data/web/static/svg/folder.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgForkSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgForkSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/fork.svg"
	name := "data/web/static/svg/fork.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFullscreenEnterSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFullscreenEnterSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/fullscreen-enter.svg"
	name := "data/web/static/svg/fullscreen-enter.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgFullscreenExitSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgFullscreenExitSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/fullscreen-exit.svg"
	name := "data/web/static/svg/fullscreen-exit.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgGlobeSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgGlobeSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/globe.svg"
	name := "data/web/static/svg/globe.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgGraphSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgGraphSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/graph.svg"
	name := "data/web/static/svg/graph.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgGridFourUpSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgGridFourUpSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/grid-four-up.svg"
	name := "data/web/static/svg/grid-four-up.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgGridThreeUpSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgGridThreeUpSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/grid-three-up.svg"
	name := "data/web/static/svg/grid-three-up.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgGridTwoUpSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgGridTwoUpSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/grid-two-up.svg"
	name := "data/web/static/svg/grid-two-up.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgHardDriveSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgHardDriveSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/hard-drive.svg"
	name := "data/web/static/svg/hard-drive.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgHeaderSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgHeaderSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/header.svg"
	name := "data/web/static/svg/header.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgHeadphonesSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgHeadphonesSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/headphones.svg"
	name := "data/web/static/svg/headphones.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgHeartSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgHeartSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/heart.svg"
	name := "data/web/static/svg/heart.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgHomeSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgHomeSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/home.svg"
	name := "data/web/static/svg/home.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgImageSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgImageSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/image.svg"
	name := "data/web/static/svg/image.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgInboxSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgInboxSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/inbox.svg"
	name := "data/web/static/svg/inbox.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgInfinitySvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgInfinitySvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/infinity.svg"
	name := "data/web/static/svg/infinity.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgInfoSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgInfoSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/info.svg"
	name := "data/web/static/svg/info.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgItalicSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgItalicSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/italic.svg"
	name := "data/web/static/svg/italic.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgJustifyCenterSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgJustifyCenterSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/justify-center.svg"
	name := "data/web/static/svg/justify-center.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgJustifyLeftSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgJustifyLeftSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/justify-left.svg"
	name := "data/web/static/svg/justify-left.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgJustifyRightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgJustifyRightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/justify-right.svg"
	name := "data/web/static/svg/justify-right.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgKeySvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgKeySvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/key.svg"
	name := "data/web/static/svg/key.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLaptopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLaptopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/laptop.svg"
	name := "data/web/static/svg/laptop.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLayersSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLayersSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/layers.svg"
	name := "data/web/static/svg/layers.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLightbulbSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLightbulbSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/lightbulb.svg"
	name := "data/web/static/svg/lightbulb.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLinkBrokenSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLinkBrokenSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/link-broken.svg"
	name := "data/web/static/svg/link-broken.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLinkIntactSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLinkIntactSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/link-intact.svg"
	name := "data/web/static/svg/link-intact.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgListRichSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgListRichSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/list-rich.svg"
	name := "data/web/static/svg/list-rich.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgListSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgListSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/list.svg"
	name := "data/web/static/svg/list.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLocationSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLocationSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/location.svg"
	name := "data/web/static/svg/location.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLockLockedSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLockLockedSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/lock-locked.svg"
	name := "data/web/static/svg/lock-locked.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLockUnlockedSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLockUnlockedSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/lock-unlocked.svg"
	name := "data/web/static/svg/lock-unlocked.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLoopCircularSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLoopCircularSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/loop-circular.svg"
	name := "data/web/static/svg/loop-circular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLoopSquareSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLoopSquareSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/loop-square.svg"
	name := "data/web/static/svg/loop-square.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgLoopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgLoopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/loop.svg"
	name := "data/web/static/svg/loop.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMagnifyingGlassSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMagnifyingGlassSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/magnifying-glass.svg"
	name := "data/web/static/svg/magnifying-glass.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMapMarkerSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMapMarkerSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/map-marker.svg"
	name := "data/web/static/svg/map-marker.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMapSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMapSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/map.svg"
	name := "data/web/static/svg/map.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaPauseSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaPauseSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-pause.svg"
	name := "data/web/static/svg/media-pause.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaPlaySvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaPlaySvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-play.svg"
	name := "data/web/static/svg/media-play.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaRecordSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaRecordSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-record.svg"
	name := "data/web/static/svg/media-record.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaSkipBackwardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaSkipBackwardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-skip-backward.svg"
	name := "data/web/static/svg/media-skip-backward.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaSkipForwardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaSkipForwardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-skip-forward.svg"
	name := "data/web/static/svg/media-skip-forward.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaStepBackwardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaStepBackwardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-step-backward.svg"
	name := "data/web/static/svg/media-step-backward.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaStepForwardSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaStepForwardSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-step-forward.svg"
	name := "data/web/static/svg/media-step-forward.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMediaStopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMediaStopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/media-stop.svg"
	name := "data/web/static/svg/media-stop.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMedicalCrossSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMedicalCrossSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/medical-cross.svg"
	name := "data/web/static/svg/medical-cross.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMenuSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMenuSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/menu.svg"
	name := "data/web/static/svg/menu.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMicrophoneSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMicrophoneSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/microphone.svg"
	name := "data/web/static/svg/microphone.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMinusSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMinusSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/minus.svg"
	name := "data/web/static/svg/minus.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMonitorSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMonitorSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/monitor.svg"
	name := "data/web/static/svg/monitor.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMoonSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMoonSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/moon.svg"
	name := "data/web/static/svg/moon.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMoveSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMoveSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/move.svg"
	name := "data/web/static/svg/move.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgMusicalNoteSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgMusicalNoteSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/musical-note.svg"
	name := "data/web/static/svg/musical-note.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPaperclipSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPaperclipSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/paperclip.svg"
	name := "data/web/static/svg/paperclip.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPencilSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPencilSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/pencil.svg"
	name := "data/web/static/svg/pencil.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPeopleSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPeopleSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/people.svg"
	name := "data/web/static/svg/people.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPersonSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPersonSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/person.svg"
	name := "data/web/static/svg/person.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPhoneSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPhoneSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/phone.svg"
	name := "data/web/static/svg/phone.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPieChartSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPieChartSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/pie-chart.svg"
	name := "data/web/static/svg/pie-chart.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPinSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPinSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/pin.svg"
	name := "data/web/static/svg/pin.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPlayCircleSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPlayCircleSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/play-circle.svg"
	name := "data/web/static/svg/play-circle.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPlusSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPlusSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/plus.svg"
	name := "data/web/static/svg/plus.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPowerStandbySvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPowerStandbySvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/power-standby.svg"
	name := "data/web/static/svg/power-standby.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPrintSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPrintSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/print.svg"
	name := "data/web/static/svg/print.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgProjectSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgProjectSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/project.svg"
	name := "data/web/static/svg/project.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPulseSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPulseSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/pulse.svg"
	name := "data/web/static/svg/pulse.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgPuzzlePieceSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgPuzzlePieceSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/puzzle-piece.svg"
	name := "data/web/static/svg/puzzle-piece.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgQuestionMarkSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgQuestionMarkSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/question-mark.svg"
	name := "data/web/static/svg/question-mark.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgRainSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgRainSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/rain.svg"
	name := "data/web/static/svg/rain.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgRandomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgRandomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/random.svg"
	name := "data/web/static/svg/random.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgReloadSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgReloadSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/reload.svg"
	name := "data/web/static/svg/reload.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgResizeBothSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgResizeBothSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/resize-both.svg"
	name := "data/web/static/svg/resize-both.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgResizeHeightSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgResizeHeightSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/resize-height.svg"
	name := "data/web/static/svg/resize-height.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgResizeWidthSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgResizeWidthSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/resize-width.svg"
	name := "data/web/static/svg/resize-width.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgRssAltSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgRssAltSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/rss-alt.svg"
	name := "data/web/static/svg/rss-alt.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgRssSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgRssSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/rss.svg"
	name := "data/web/static/svg/rss.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgScriptSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgScriptSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/script.svg"
	name := "data/web/static/svg/script.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgShareBoxedSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgShareBoxedSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/share-boxed.svg"
	name := "data/web/static/svg/share-boxed.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgShareSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgShareSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/share.svg"
	name := "data/web/static/svg/share.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgShieldSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgShieldSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/shield.svg"
	name := "data/web/static/svg/shield.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgSignalSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgSignalSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/signal.svg"
	name := "data/web/static/svg/signal.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgSignpostSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgSignpostSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/signpost.svg"
	name := "data/web/static/svg/signpost.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgSortAscendingSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgSortAscendingSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/sort-ascending.svg"
	name := "data/web/static/svg/sort-ascending.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgSortDescendingSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgSortDescendingSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/sort-descending.svg"
	name := "data/web/static/svg/sort-descending.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgSpreadsheetSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgSpreadsheetSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/spreadsheet.svg"
	name := "data/web/static/svg/spreadsheet.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgStarSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgStarSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/star.svg"
	name := "data/web/static/svg/star.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgSunSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgSunSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/sun.svg"
	name := "data/web/static/svg/sun.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTabletSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTabletSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/tablet.svg"
	name := "data/web/static/svg/tablet.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTagSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTagSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/tag.svg"
	name := "data/web/static/svg/tag.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTagsSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTagsSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/tags.svg"
	name := "data/web/static/svg/tags.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTargetSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTargetSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/target.svg"
	name := "data/web/static/svg/target.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTaskSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTaskSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/task.svg"
	name := "data/web/static/svg/task.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTerminalSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTerminalSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/terminal.svg"
	name := "data/web/static/svg/terminal.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTextSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTextSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/text.svg"
	name := "data/web/static/svg/text.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgThumbDownSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgThumbDownSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/thumb-down.svg"
	name := "data/web/static/svg/thumb-down.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgThumbUpSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgThumbUpSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/thumb-up.svg"
	name := "data/web/static/svg/thumb-up.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTimerSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTimerSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/timer.svg"
	name := "data/web/static/svg/timer.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTransferSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTransferSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/transfer.svg"
	name := "data/web/static/svg/transfer.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgTrashSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgTrashSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/trash.svg"
	name := "data/web/static/svg/trash.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgUnderlineSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgUnderlineSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/underline.svg"
	name := "data/web/static/svg/underline.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVerticalAlignBottomSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVerticalAlignBottomSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/vertical-align-bottom.svg"
	name := "data/web/static/svg/vertical-align-bottom.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVerticalAlignCenterSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVerticalAlignCenterSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/vertical-align-center.svg"
	name := "data/web/static/svg/vertical-align-center.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVerticalAlignTopSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVerticalAlignTopSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/vertical-align-top.svg"
	name := "data/web/static/svg/vertical-align-top.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVideoSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVideoSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/video.svg"
	name := "data/web/static/svg/video.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVolumeHighSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVolumeHighSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/volume-high.svg"
	name := "data/web/static/svg/volume-high.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVolumeLowSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVolumeLowSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/volume-low.svg"
	name := "data/web/static/svg/volume-low.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgVolumeOffSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgVolumeOffSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/volume-off.svg"
	name := "data/web/static/svg/volume-off.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgWarningSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgWarningSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/warning.svg"
	name := "data/web/static/svg/warning.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgWifiSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgWifiSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/wifi.svg"
	name := "data/web/static/svg/wifi.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgWrenchSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgWrenchSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/wrench.svg"
	name := "data/web/static/svg/wrench.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgXSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgXSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/x.svg"
	name := "data/web/static/svg/x.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgYenSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgYenSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/yen.svg"
	name := "data/web/static/svg/yen.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgZoomInSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgZoomInSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/zoom-in.svg"
	name := "data/web/static/svg/zoom-in.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebStaticSvgZoomOutSvg reads file data from disk. It returns an error on failure.
func dataWebStaticSvgZoomOutSvg() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/static/svg/zoom-out.svg"
	name := "data/web/static/svg/zoom-out.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebTemplates403Tpl reads file data from disk. It returns an error on failure.
func dataWebTemplates403Tpl() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/templates/403.tpl"
	name := "data/web/templates/403.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebTemplatesLayoutTpl reads file data from disk. It returns an error on failure.
func dataWebTemplatesLayoutTpl() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/templates/layout.tpl"
	name := "data/web/templates/layout.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebTemplatesNodeChildrenTpl reads file data from disk. It returns an error on failure.
func dataWebTemplatesNodeChildrenTpl() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/templates/node-children.tpl"
	name := "data/web/templates/node-children.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebTemplatesNodeContentTpl reads file data from disk. It returns an error on failure.
func dataWebTemplatesNodeContentTpl() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/templates/node-content.tpl"
	name := "data/web/templates/node-content.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// dataWebTemplatesSearchResultsTpl reads file data from disk. It returns an error on failure.
func dataWebTemplatesSearchResultsTpl() (*asset, error) {
	path := "/home/jonathan/workspace/golang/src/ldss/data/web/templates/search-results.tpl"
	name := "data/web/templates/search-results.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/help/config":                                 dataHelpConfig,
	"data/help/download":                               dataHelpDownload,
	"data/help/help":                                   dataHelpHelp,
	"data/help/rest":                                   dataHelpRest,
	"data/reference/eng":                               dataReferenceEng,
	"data/reference/example":                           dataReferenceExample,
	"data/web/static/css/stylesheet.css":               dataWebStaticCssStylesheetCss,
	"data/web/static/favicon.ico":                      dataWebStaticFaviconIco,
	"data/web/static/js/ldss.js":                       dataWebStaticJsLdssJs,
	"data/web/static/svg/ICON-LICENSE":                 dataWebStaticSvgIconLicense,
	"data/web/static/svg/README.md":                    dataWebStaticSvgReadmeMd,
	"data/web/static/svg/account-login.svg":            dataWebStaticSvgAccountLoginSvg,
	"data/web/static/svg/account-logout.svg":           dataWebStaticSvgAccountLogoutSvg,
	"data/web/static/svg/action-redo.svg":              dataWebStaticSvgActionRedoSvg,
	"data/web/static/svg/action-undo.svg":              dataWebStaticSvgActionUndoSvg,
	"data/web/static/svg/align-center.svg":             dataWebStaticSvgAlignCenterSvg,
	"data/web/static/svg/align-left.svg":               dataWebStaticSvgAlignLeftSvg,
	"data/web/static/svg/align-right.svg":              dataWebStaticSvgAlignRightSvg,
	"data/web/static/svg/aperture.svg":                 dataWebStaticSvgApertureSvg,
	"data/web/static/svg/arrow-bottom.svg":             dataWebStaticSvgArrowBottomSvg,
	"data/web/static/svg/arrow-circle-bottom.svg":      dataWebStaticSvgArrowCircleBottomSvg,
	"data/web/static/svg/arrow-circle-left.svg":        dataWebStaticSvgArrowCircleLeftSvg,
	"data/web/static/svg/arrow-circle-right.svg":       dataWebStaticSvgArrowCircleRightSvg,
	"data/web/static/svg/arrow-circle-top.svg":         dataWebStaticSvgArrowCircleTopSvg,
	"data/web/static/svg/arrow-left.svg":               dataWebStaticSvgArrowLeftSvg,
	"data/web/static/svg/arrow-right.svg":              dataWebStaticSvgArrowRightSvg,
	"data/web/static/svg/arrow-thick-bottom.svg":       dataWebStaticSvgArrowThickBottomSvg,
	"data/web/static/svg/arrow-thick-left.svg":         dataWebStaticSvgArrowThickLeftSvg,
	"data/web/static/svg/arrow-thick-right.svg":        dataWebStaticSvgArrowThickRightSvg,
	"data/web/static/svg/arrow-thick-top.svg":          dataWebStaticSvgArrowThickTopSvg,
	"data/web/static/svg/arrow-top.svg":                dataWebStaticSvgArrowTopSvg,
	"data/web/static/svg/audio-spectrum.svg":           dataWebStaticSvgAudioSpectrumSvg,
	"data/web/static/svg/audio.svg":                    dataWebStaticSvgAudioSvg,
	"data/web/static/svg/badge.svg":                    dataWebStaticSvgBadgeSvg,
	"data/web/static/svg/ban.svg":                      dataWebStaticSvgBanSvg,
	"data/web/static/svg/bar-chart.svg":                dataWebStaticSvgBarChartSvg,
	"data/web/static/svg/basket.svg":                   dataWebStaticSvgBasketSvg,
	"data/web/static/svg/battery-empty.svg":            dataWebStaticSvgBatteryEmptySvg,
	"data/web/static/svg/battery-full.svg":             dataWebStaticSvgBatteryFullSvg,
	"data/web/static/svg/beaker.svg":                   dataWebStaticSvgBeakerSvg,
	"data/web/static/svg/bell.svg":                     dataWebStaticSvgBellSvg,
	"data/web/static/svg/bluetooth.svg":                dataWebStaticSvgBluetoothSvg,
	"data/web/static/svg/bold.svg":                     dataWebStaticSvgBoldSvg,
	"data/web/static/svg/bolt.svg":                     dataWebStaticSvgBoltSvg,
	"data/web/static/svg/book.svg":                     dataWebStaticSvgBookSvg,
	"data/web/static/svg/bookmark.svg":                 dataWebStaticSvgBookmarkSvg,
	"data/web/static/svg/box.svg":                      dataWebStaticSvgBoxSvg,
	"data/web/static/svg/briefcase.svg":                dataWebStaticSvgBriefcaseSvg,
	"data/web/static/svg/british-pound.svg":            dataWebStaticSvgBritishPoundSvg,
	"data/web/static/svg/browser.svg":                  dataWebStaticSvgBrowserSvg,
	"data/web/static/svg/brush.svg":                    dataWebStaticSvgBrushSvg,
	"data/web/static/svg/bug.svg":                      dataWebStaticSvgBugSvg,
	"data/web/static/svg/bullhorn.svg":                 dataWebStaticSvgBullhornSvg,
	"data/web/static/svg/calculator.svg":               dataWebStaticSvgCalculatorSvg,
	"data/web/static/svg/calendar.svg":                 dataWebStaticSvgCalendarSvg,
	"data/web/static/svg/camera-slr.svg":               dataWebStaticSvgCameraSlrSvg,
	"data/web/static/svg/caret-bottom.svg":             dataWebStaticSvgCaretBottomSvg,
	"data/web/static/svg/caret-left.svg":               dataWebStaticSvgCaretLeftSvg,
	"data/web/static/svg/caret-right.svg":              dataWebStaticSvgCaretRightSvg,
	"data/web/static/svg/caret-top.svg":                dataWebStaticSvgCaretTopSvg,
	"data/web/static/svg/cart.svg":                     dataWebStaticSvgCartSvg,
	"data/web/static/svg/chat.svg":                     dataWebStaticSvgChatSvg,
	"data/web/static/svg/check.svg":                    dataWebStaticSvgCheckSvg,
	"data/web/static/svg/chevron-bottom.svg":           dataWebStaticSvgChevronBottomSvg,
	"data/web/static/svg/chevron-left.svg":             dataWebStaticSvgChevronLeftSvg,
	"data/web/static/svg/chevron-right.svg":            dataWebStaticSvgChevronRightSvg,
	"data/web/static/svg/chevron-top.svg":              dataWebStaticSvgChevronTopSvg,
	"data/web/static/svg/circle-check.svg":             dataWebStaticSvgCircleCheckSvg,
	"data/web/static/svg/circle-x.svg":                 dataWebStaticSvgCircleXSvg,
	"data/web/static/svg/clipboard.svg":                dataWebStaticSvgClipboardSvg,
	"data/web/static/svg/clock.svg":                    dataWebStaticSvgClockSvg,
	"data/web/static/svg/cloud-download.svg":           dataWebStaticSvgCloudDownloadSvg,
	"data/web/static/svg/cloud-upload.svg":             dataWebStaticSvgCloudUploadSvg,
	"data/web/static/svg/cloud.svg":                    dataWebStaticSvgCloudSvg,
	"data/web/static/svg/cloudy.svg":                   dataWebStaticSvgCloudySvg,
	"data/web/static/svg/code.svg":                     dataWebStaticSvgCodeSvg,
	"data/web/static/svg/cog.svg":                      dataWebStaticSvgCogSvg,
	"data/web/static/svg/collapse-down.svg":            dataWebStaticSvgCollapseDownSvg,
	"data/web/static/svg/collapse-left.svg":            dataWebStaticSvgCollapseLeftSvg,
	"data/web/static/svg/collapse-right.svg":           dataWebStaticSvgCollapseRightSvg,
	"data/web/static/svg/collapse-up.svg":              dataWebStaticSvgCollapseUpSvg,
	"data/web/static/svg/command.svg":                  dataWebStaticSvgCommandSvg,
	"data/web/static/svg/comment-square.svg":           dataWebStaticSvgCommentSquareSvg,
	"data/web/static/svg/compass.svg":                  dataWebStaticSvgCompassSvg,
	"data/web/static/svg/contrast.svg":                 dataWebStaticSvgContrastSvg,
	"data/web/static/svg/copywriting.svg":              dataWebStaticSvgCopywritingSvg,
	"data/web/static/svg/credit-card.svg":              dataWebStaticSvgCreditCardSvg,
	"data/web/static/svg/crop.svg":                     dataWebStaticSvgCropSvg,
	"data/web/static/svg/dashboard.svg":                dataWebStaticSvgDashboardSvg,
	"data/web/static/svg/data-transfer-download.svg":   dataWebStaticSvgDataTransferDownloadSvg,
	"data/web/static/svg/data-transfer-upload.svg":     dataWebStaticSvgDataTransferUploadSvg,
	"data/web/static/svg/delete.svg":                   dataWebStaticSvgDeleteSvg,
	"data/web/static/svg/dial.svg":                     dataWebStaticSvgDialSvg,
	"data/web/static/svg/document.svg":                 dataWebStaticSvgDocumentSvg,
	"data/web/static/svg/dollar.svg":                   dataWebStaticSvgDollarSvg,
	"data/web/static/svg/double-quote-sans-left.svg":   dataWebStaticSvgDoubleQuoteSansLeftSvg,
	"data/web/static/svg/double-quote-sans-right.svg":  dataWebStaticSvgDoubleQuoteSansRightSvg,
	"data/web/static/svg/double-quote-serif-left.svg":  dataWebStaticSvgDoubleQuoteSerifLeftSvg,
	"data/web/static/svg/double-quote-serif-right.svg": dataWebStaticSvgDoubleQuoteSerifRightSvg,
	"data/web/static/svg/droplet.svg":                  dataWebStaticSvgDropletSvg,
	"data/web/static/svg/eject.svg":                    dataWebStaticSvgEjectSvg,
	"data/web/static/svg/elevator.svg":                 dataWebStaticSvgElevatorSvg,
	"data/web/static/svg/ellipses.svg":                 dataWebStaticSvgEllipsesSvg,
	"data/web/static/svg/envelope-closed.svg":          dataWebStaticSvgEnvelopeClosedSvg,
	"data/web/static/svg/envelope-open.svg":            dataWebStaticSvgEnvelopeOpenSvg,
	"data/web/static/svg/euro.svg":                     dataWebStaticSvgEuroSvg,
	"data/web/static/svg/excerpt.svg":                  dataWebStaticSvgExcerptSvg,
	"data/web/static/svg/expand-down.svg":              dataWebStaticSvgExpandDownSvg,
	"data/web/static/svg/expand-left.svg":              dataWebStaticSvgExpandLeftSvg,
	"data/web/static/svg/expand-right.svg":             dataWebStaticSvgExpandRightSvg,
	"data/web/static/svg/expand-up.svg":                dataWebStaticSvgExpandUpSvg,
	"data/web/static/svg/external-link.svg":            dataWebStaticSvgExternalLinkSvg,
	"data/web/static/svg/eye.svg":                      dataWebStaticSvgEyeSvg,
	"data/web/static/svg/eyedropper.svg":               dataWebStaticSvgEyedropperSvg,
	"data/web/static/svg/file.svg":                     dataWebStaticSvgFileSvg,
	"data/web/static/svg/fire.svg":                     dataWebStaticSvgFireSvg,
	"data/web/static/svg/flag.svg":                     dataWebStaticSvgFlagSvg,
	"data/web/static/svg/flash.svg":                    dataWebStaticSvgFlashSvg,
	"data/web/static/svg/folder.svg":                   dataWebStaticSvgFolderSvg,
	"data/web/static/svg/fork.svg":                     dataWebStaticSvgForkSvg,
	"data/web/static/svg/fullscreen-enter.svg":         dataWebStaticSvgFullscreenEnterSvg,
	"data/web/static/svg/fullscreen-exit.svg":          dataWebStaticSvgFullscreenExitSvg,
	"data/web/static/svg/globe.svg":                    dataWebStaticSvgGlobeSvg,
	"data/web/static/svg/graph.svg":                    dataWebStaticSvgGraphSvg,
	"data/web/static/svg/grid-four-up.svg":             dataWebStaticSvgGridFourUpSvg,
	"data/web/static/svg/grid-three-up.svg":            dataWebStaticSvgGridThreeUpSvg,
	"data/web/static/svg/grid-two-up.svg":              dataWebStaticSvgGridTwoUpSvg,
	"data/web/static/svg/hard-drive.svg":               dataWebStaticSvgHardDriveSvg,
	"data/web/static/svg/header.svg":                   dataWebStaticSvgHeaderSvg,
	"data/web/static/svg/headphones.svg":               dataWebStaticSvgHeadphonesSvg,
	"data/web/static/svg/heart.svg":                    dataWebStaticSvgHeartSvg,
	"data/web/static/svg/home.svg":                     dataWebStaticSvgHomeSvg,
	"data/web/static/svg/image.svg":                    dataWebStaticSvgImageSvg,
	"data/web/static/svg/inbox.svg":                    dataWebStaticSvgInboxSvg,
	"data/web/static/svg/infinity.svg":                 dataWebStaticSvgInfinitySvg,
	"data/web/static/svg/info.svg":                     dataWebStaticSvgInfoSvg,
	"data/web/static/svg/italic.svg":                   dataWebStaticSvgItalicSvg,
	"data/web/static/svg/justify-center.svg":           dataWebStaticSvgJustifyCenterSvg,
	"data/web/static/svg/justify-left.svg":             dataWebStaticSvgJustifyLeftSvg,
	"data/web/static/svg/justify-right.svg":            dataWebStaticSvgJustifyRightSvg,
	"data/web/static/svg/key.svg":                      dataWebStaticSvgKeySvg,
	"data/web/static/svg/laptop.svg":                   dataWebStaticSvgLaptopSvg,
	"data/web/static/svg/layers.svg":                   dataWebStaticSvgLayersSvg,
	"data/web/static/svg/lightbulb.svg":                dataWebStaticSvgLightbulbSvg,
	"data/web/static/svg/link-broken.svg":              dataWebStaticSvgLinkBrokenSvg,
	"data/web/static/svg/link-intact.svg":              dataWebStaticSvgLinkIntactSvg,
	"data/web/static/svg/list-rich.svg":                dataWebStaticSvgListRichSvg,
	"data/web/static/svg/list.svg":                     dataWebStaticSvgListSvg,
	"data/web/static/svg/location.svg":                 dataWebStaticSvgLocationSvg,
	"data/web/static/svg/lock-locked.svg":              dataWebStaticSvgLockLockedSvg,
	"data/web/static/svg/lock-unlocked.svg":            dataWebStaticSvgLockUnlockedSvg,
	"data/web/static/svg/loop-circular.svg":            dataWebStaticSvgLoopCircularSvg,
	"data/web/static/svg/loop-square.svg":              dataWebStaticSvgLoopSquareSvg,
	"data/web/static/svg/loop.svg":                     dataWebStaticSvgLoopSvg,
	"data/web/static/svg/magnifying-glass.svg":         dataWebStaticSvgMagnifyingGlassSvg,
	"data/web/static/svg/map-marker.svg":               dataWebStaticSvgMapMarkerSvg,
	"data/web/static/svg/map.svg":                      dataWebStaticSvgMapSvg,
	"data/web/static/svg/media-pause.svg":              dataWebStaticSvgMediaPauseSvg,
	"data/web/static/svg/media-play.svg":               dataWebStaticSvgMediaPlaySvg,
	"data/web/static/svg/media-record.svg":             dataWebStaticSvgMediaRecordSvg,
	"data/web/static/svg/media-skip-backward.svg":      dataWebStaticSvgMediaSkipBackwardSvg,
	"data/web/static/svg/media-skip-forward.svg":       dataWebStaticSvgMediaSkipForwardSvg,
	"data/web/static/svg/media-step-backward.svg":      dataWebStaticSvgMediaStepBackwardSvg,
	"data/web/static/svg/media-step-forward.svg":       dataWebStaticSvgMediaStepForwardSvg,
	"data/web/static/svg/media-stop.svg":               dataWebStaticSvgMediaStopSvg,
	"data/web/static/svg/medical-cross.svg":            dataWebStaticSvgMedicalCrossSvg,
	"data/web/static/svg/menu.svg":                     dataWebStaticSvgMenuSvg,
	"data/web/static/svg/microphone.svg":               dataWebStaticSvgMicrophoneSvg,
	"data/web/static/svg/minus.svg":                    dataWebStaticSvgMinusSvg,
	"data/web/static/svg/monitor.svg":                  dataWebStaticSvgMonitorSvg,
	"data/web/static/svg/moon.svg":                     dataWebStaticSvgMoonSvg,
	"data/web/static/svg/move.svg":                     dataWebStaticSvgMoveSvg,
	"data/web/static/svg/musical-note.svg":             dataWebStaticSvgMusicalNoteSvg,
	"data/web/static/svg/paperclip.svg":                dataWebStaticSvgPaperclipSvg,
	"data/web/static/svg/pencil.svg":                   dataWebStaticSvgPencilSvg,
	"data/web/static/svg/people.svg":                   dataWebStaticSvgPeopleSvg,
	"data/web/static/svg/person.svg":                   dataWebStaticSvgPersonSvg,
	"data/web/static/svg/phone.svg":                    dataWebStaticSvgPhoneSvg,
	"data/web/static/svg/pie-chart.svg":                dataWebStaticSvgPieChartSvg,
	"data/web/static/svg/pin.svg":                      dataWebStaticSvgPinSvg,
	"data/web/static/svg/play-circle.svg":              dataWebStaticSvgPlayCircleSvg,
	"data/web/static/svg/plus.svg":                     dataWebStaticSvgPlusSvg,
	"data/web/static/svg/power-standby.svg":            dataWebStaticSvgPowerStandbySvg,
	"data/web/static/svg/print.svg":                    dataWebStaticSvgPrintSvg,
	"data/web/static/svg/project.svg":                  dataWebStaticSvgProjectSvg,
	"data/web/static/svg/pulse.svg":                    dataWebStaticSvgPulseSvg,
	"data/web/static/svg/puzzle-piece.svg":             dataWebStaticSvgPuzzlePieceSvg,
	"data/web/static/svg/question-mark.svg":            dataWebStaticSvgQuestionMarkSvg,
	"data/web/static/svg/rain.svg":                     dataWebStaticSvgRainSvg,
	"data/web/static/svg/random.svg":                   dataWebStaticSvgRandomSvg,
	"data/web/static/svg/reload.svg":                   dataWebStaticSvgReloadSvg,
	"data/web/static/svg/resize-both.svg":              dataWebStaticSvgResizeBothSvg,
	"data/web/static/svg/resize-height.svg":            dataWebStaticSvgResizeHeightSvg,
	"data/web/static/svg/resize-width.svg":             dataWebStaticSvgResizeWidthSvg,
	"data/web/static/svg/rss-alt.svg":                  dataWebStaticSvgRssAltSvg,
	"data/web/static/svg/rss.svg":                      dataWebStaticSvgRssSvg,
	"data/web/static/svg/script.svg":                   dataWebStaticSvgScriptSvg,
	"data/web/static/svg/share-boxed.svg":              dataWebStaticSvgShareBoxedSvg,
	"data/web/static/svg/share.svg":                    dataWebStaticSvgShareSvg,
	"data/web/static/svg/shield.svg":                   dataWebStaticSvgShieldSvg,
	"data/web/static/svg/signal.svg":                   dataWebStaticSvgSignalSvg,
	"data/web/static/svg/signpost.svg":                 dataWebStaticSvgSignpostSvg,
	"data/web/static/svg/sort-ascending.svg":           dataWebStaticSvgSortAscendingSvg,
	"data/web/static/svg/sort-descending.svg":          dataWebStaticSvgSortDescendingSvg,
	"data/web/static/svg/spreadsheet.svg":              dataWebStaticSvgSpreadsheetSvg,
	"data/web/static/svg/star.svg":                     dataWebStaticSvgStarSvg,
	"data/web/static/svg/sun.svg":                      dataWebStaticSvgSunSvg,
	"data/web/static/svg/tablet.svg":                   dataWebStaticSvgTabletSvg,
	"data/web/static/svg/tag.svg":                      dataWebStaticSvgTagSvg,
	"data/web/static/svg/tags.svg":                     dataWebStaticSvgTagsSvg,
	"data/web/static/svg/target.svg":                   dataWebStaticSvgTargetSvg,
	"data/web/static/svg/task.svg":                     dataWebStaticSvgTaskSvg,
	"data/web/static/svg/terminal.svg":                 dataWebStaticSvgTerminalSvg,
	"data/web/static/svg/text.svg":                     dataWebStaticSvgTextSvg,
	"data/web/static/svg/thumb-down.svg":               dataWebStaticSvgThumbDownSvg,
	"data/web/static/svg/thumb-up.svg":                 dataWebStaticSvgThumbUpSvg,
	"data/web/static/svg/timer.svg":                    dataWebStaticSvgTimerSvg,
	"data/web/static/svg/transfer.svg":                 dataWebStaticSvgTransferSvg,
	"data/web/static/svg/trash.svg":                    dataWebStaticSvgTrashSvg,
	"data/web/static/svg/underline.svg":                dataWebStaticSvgUnderlineSvg,
	"data/web/static/svg/vertical-align-bottom.svg":    dataWebStaticSvgVerticalAlignBottomSvg,
	"data/web/static/svg/vertical-align-center.svg":    dataWebStaticSvgVerticalAlignCenterSvg,
	"data/web/static/svg/vertical-align-top.svg":       dataWebStaticSvgVerticalAlignTopSvg,
	"data/web/static/svg/video.svg":                    dataWebStaticSvgVideoSvg,
	"data/web/static/svg/volume-high.svg":              dataWebStaticSvgVolumeHighSvg,
	"data/web/static/svg/volume-low.svg":               dataWebStaticSvgVolumeLowSvg,
	"data/web/static/svg/volume-off.svg":               dataWebStaticSvgVolumeOffSvg,
	"data/web/static/svg/warning.svg":                  dataWebStaticSvgWarningSvg,
	"data/web/static/svg/wifi.svg":                     dataWebStaticSvgWifiSvg,
	"data/web/static/svg/wrench.svg":                   dataWebStaticSvgWrenchSvg,
	"data/web/static/svg/x.svg":                        dataWebStaticSvgXSvg,
	"data/web/static/svg/yen.svg":                      dataWebStaticSvgYenSvg,
	"data/web/static/svg/zoom-in.svg":                  dataWebStaticSvgZoomInSvg,
	"data/web/static/svg/zoom-out.svg":                 dataWebStaticSvgZoomOutSvg,
	"data/web/templates/403.tpl":                       dataWebTemplates403Tpl,
	"data/web/templates/layout.tpl":                    dataWebTemplatesLayoutTpl,
	"data/web/templates/node-children.tpl":             dataWebTemplatesNodeChildrenTpl,
	"data/web/templates/node-content.tpl":              dataWebTemplatesNodeContentTpl,
	"data/web/templates/search-results.tpl":            dataWebTemplatesSearchResultsTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"help": &bintree{nil, map[string]*bintree{
			"config":   &bintree{dataHelpConfig, map[string]*bintree{}},
			"download": &bintree{dataHelpDownload, map[string]*bintree{}},
			"help":     &bintree{dataHelpHelp, map[string]*bintree{}},
			"rest":     &bintree{dataHelpRest, map[string]*bintree{}},
		}},
		"reference": &bintree{nil, map[string]*bintree{
			"eng":     &bintree{dataReferenceEng, map[string]*bintree{}},
			"example": &bintree{dataReferenceExample, map[string]*bintree{}},
		}},
		"web": &bintree{nil, map[string]*bintree{
			"static": &bintree{nil, map[string]*bintree{
				"css": &bintree{nil, map[string]*bintree{
					"stylesheet.css": &bintree{dataWebStaticCssStylesheetCss, map[string]*bintree{}},
				}},
				"favicon.ico": &bintree{dataWebStaticFaviconIco, map[string]*bintree{}},
				"js": &bintree{nil, map[string]*bintree{
					"ldss.js": &bintree{dataWebStaticJsLdssJs, map[string]*bintree{}},
				}},
				"svg": &bintree{nil, map[string]*bintree{
					"ICON-LICENSE":                 &bintree{dataWebStaticSvgIconLicense, map[string]*bintree{}},
					"README.md":                    &bintree{dataWebStaticSvgReadmeMd, map[string]*bintree{}},
					"account-login.svg":            &bintree{dataWebStaticSvgAccountLoginSvg, map[string]*bintree{}},
					"account-logout.svg":           &bintree{dataWebStaticSvgAccountLogoutSvg, map[string]*bintree{}},
					"action-redo.svg":              &bintree{dataWebStaticSvgActionRedoSvg, map[string]*bintree{}},
					"action-undo.svg":              &bintree{dataWebStaticSvgActionUndoSvg, map[string]*bintree{}},
					"align-center.svg":             &bintree{dataWebStaticSvgAlignCenterSvg, map[string]*bintree{}},
					"align-left.svg":               &bintree{dataWebStaticSvgAlignLeftSvg, map[string]*bintree{}},
					"align-right.svg":              &bintree{dataWebStaticSvgAlignRightSvg, map[string]*bintree{}},
					"aperture.svg":                 &bintree{dataWebStaticSvgApertureSvg, map[string]*bintree{}},
					"arrow-bottom.svg":             &bintree{dataWebStaticSvgArrowBottomSvg, map[string]*bintree{}},
					"arrow-circle-bottom.svg":      &bintree{dataWebStaticSvgArrowCircleBottomSvg, map[string]*bintree{}},
					"arrow-circle-left.svg":        &bintree{dataWebStaticSvgArrowCircleLeftSvg, map[string]*bintree{}},
					"arrow-circle-right.svg":       &bintree{dataWebStaticSvgArrowCircleRightSvg, map[string]*bintree{}},
					"arrow-circle-top.svg":         &bintree{dataWebStaticSvgArrowCircleTopSvg, map[string]*bintree{}},
					"arrow-left.svg":               &bintree{dataWebStaticSvgArrowLeftSvg, map[string]*bintree{}},
					"arrow-right.svg":              &bintree{dataWebStaticSvgArrowRightSvg, map[string]*bintree{}},
					"arrow-thick-bottom.svg":       &bintree{dataWebStaticSvgArrowThickBottomSvg, map[string]*bintree{}},
					"arrow-thick-left.svg":         &bintree{dataWebStaticSvgArrowThickLeftSvg, map[string]*bintree{}},
					"arrow-thick-right.svg":        &bintree{dataWebStaticSvgArrowThickRightSvg, map[string]*bintree{}},
					"arrow-thick-top.svg":          &bintree{dataWebStaticSvgArrowThickTopSvg, map[string]*bintree{}},
					"arrow-top.svg":                &bintree{dataWebStaticSvgArrowTopSvg, map[string]*bintree{}},
					"audio-spectrum.svg":           &bintree{dataWebStaticSvgAudioSpectrumSvg, map[string]*bintree{}},
					"audio.svg":                    &bintree{dataWebStaticSvgAudioSvg, map[string]*bintree{}},
					"badge.svg":                    &bintree{dataWebStaticSvgBadgeSvg, map[string]*bintree{}},
					"ban.svg":                      &bintree{dataWebStaticSvgBanSvg, map[string]*bintree{}},
					"bar-chart.svg":                &bintree{dataWebStaticSvgBarChartSvg, map[string]*bintree{}},
					"basket.svg":                   &bintree{dataWebStaticSvgBasketSvg, map[string]*bintree{}},
					"battery-empty.svg":            &bintree{dataWebStaticSvgBatteryEmptySvg, map[string]*bintree{}},
					"battery-full.svg":             &bintree{dataWebStaticSvgBatteryFullSvg, map[string]*bintree{}},
					"beaker.svg":                   &bintree{dataWebStaticSvgBeakerSvg, map[string]*bintree{}},
					"bell.svg":                     &bintree{dataWebStaticSvgBellSvg, map[string]*bintree{}},
					"bluetooth.svg":                &bintree{dataWebStaticSvgBluetoothSvg, map[string]*bintree{}},
					"bold.svg":                     &bintree{dataWebStaticSvgBoldSvg, map[string]*bintree{}},
					"bolt.svg":                     &bintree{dataWebStaticSvgBoltSvg, map[string]*bintree{}},
					"book.svg":                     &bintree{dataWebStaticSvgBookSvg, map[string]*bintree{}},
					"bookmark.svg":                 &bintree{dataWebStaticSvgBookmarkSvg, map[string]*bintree{}},
					"box.svg":                      &bintree{dataWebStaticSvgBoxSvg, map[string]*bintree{}},
					"briefcase.svg":                &bintree{dataWebStaticSvgBriefcaseSvg, map[string]*bintree{}},
					"british-pound.svg":            &bintree{dataWebStaticSvgBritishPoundSvg, map[string]*bintree{}},
					"browser.svg":                  &bintree{dataWebStaticSvgBrowserSvg, map[string]*bintree{}},
					"brush.svg":                    &bintree{dataWebStaticSvgBrushSvg, map[string]*bintree{}},
					"bug.svg":                      &bintree{dataWebStaticSvgBugSvg, map[string]*bintree{}},
					"bullhorn.svg":                 &bintree{dataWebStaticSvgBullhornSvg, map[string]*bintree{}},
					"calculator.svg":               &bintree{dataWebStaticSvgCalculatorSvg, map[string]*bintree{}},
					"calendar.svg":                 &bintree{dataWebStaticSvgCalendarSvg, map[string]*bintree{}},
					"camera-slr.svg":               &bintree{dataWebStaticSvgCameraSlrSvg, map[string]*bintree{}},
					"caret-bottom.svg":             &bintree{dataWebStaticSvgCaretBottomSvg, map[string]*bintree{}},
					"caret-left.svg":               &bintree{dataWebStaticSvgCaretLeftSvg, map[string]*bintree{}},
					"caret-right.svg":              &bintree{dataWebStaticSvgCaretRightSvg, map[string]*bintree{}},
					"caret-top.svg":                &bintree{dataWebStaticSvgCaretTopSvg, map[string]*bintree{}},
					"cart.svg":                     &bintree{dataWebStaticSvgCartSvg, map[string]*bintree{}},
					"chat.svg":                     &bintree{dataWebStaticSvgChatSvg, map[string]*bintree{}},
					"check.svg":                    &bintree{dataWebStaticSvgCheckSvg, map[string]*bintree{}},
					"chevron-bottom.svg":           &bintree{dataWebStaticSvgChevronBottomSvg, map[string]*bintree{}},
					"chevron-left.svg":             &bintree{dataWebStaticSvgChevronLeftSvg, map[string]*bintree{}},
					"chevron-right.svg":            &bintree{dataWebStaticSvgChevronRightSvg, map[string]*bintree{}},
					"chevron-top.svg":              &bintree{dataWebStaticSvgChevronTopSvg, map[string]*bintree{}},
					"circle-check.svg":             &bintree{dataWebStaticSvgCircleCheckSvg, map[string]*bintree{}},
					"circle-x.svg":                 &bintree{dataWebStaticSvgCircleXSvg, map[string]*bintree{}},
					"clipboard.svg":                &bintree{dataWebStaticSvgClipboardSvg, map[string]*bintree{}},
					"clock.svg":                    &bintree{dataWebStaticSvgClockSvg, map[string]*bintree{}},
					"cloud-download.svg":           &bintree{dataWebStaticSvgCloudDownloadSvg, map[string]*bintree{}},
					"cloud-upload.svg":             &bintree{dataWebStaticSvgCloudUploadSvg, map[string]*bintree{}},
					"cloud.svg":                    &bintree{dataWebStaticSvgCloudSvg, map[string]*bintree{}},
					"cloudy.svg":                   &bintree{dataWebStaticSvgCloudySvg, map[string]*bintree{}},
					"code.svg":                     &bintree{dataWebStaticSvgCodeSvg, map[string]*bintree{}},
					"cog.svg":                      &bintree{dataWebStaticSvgCogSvg, map[string]*bintree{}},
					"collapse-down.svg":            &bintree{dataWebStaticSvgCollapseDownSvg, map[string]*bintree{}},
					"collapse-left.svg":            &bintree{dataWebStaticSvgCollapseLeftSvg, map[string]*bintree{}},
					"collapse-right.svg":           &bintree{dataWebStaticSvgCollapseRightSvg, map[string]*bintree{}},
					"collapse-up.svg":              &bintree{dataWebStaticSvgCollapseUpSvg, map[string]*bintree{}},
					"command.svg":                  &bintree{dataWebStaticSvgCommandSvg, map[string]*bintree{}},
					"comment-square.svg":           &bintree{dataWebStaticSvgCommentSquareSvg, map[string]*bintree{}},
					"compass.svg":                  &bintree{dataWebStaticSvgCompassSvg, map[string]*bintree{}},
					"contrast.svg":                 &bintree{dataWebStaticSvgContrastSvg, map[string]*bintree{}},
					"copywriting.svg":              &bintree{dataWebStaticSvgCopywritingSvg, map[string]*bintree{}},
					"credit-card.svg":              &bintree{dataWebStaticSvgCreditCardSvg, map[string]*bintree{}},
					"crop.svg":                     &bintree{dataWebStaticSvgCropSvg, map[string]*bintree{}},
					"dashboard.svg":                &bintree{dataWebStaticSvgDashboardSvg, map[string]*bintree{}},
					"data-transfer-download.svg":   &bintree{dataWebStaticSvgDataTransferDownloadSvg, map[string]*bintree{}},
					"data-transfer-upload.svg":     &bintree{dataWebStaticSvgDataTransferUploadSvg, map[string]*bintree{}},
					"delete.svg":                   &bintree{dataWebStaticSvgDeleteSvg, map[string]*bintree{}},
					"dial.svg":                     &bintree{dataWebStaticSvgDialSvg, map[string]*bintree{}},
					"document.svg":                 &bintree{dataWebStaticSvgDocumentSvg, map[string]*bintree{}},
					"dollar.svg":                   &bintree{dataWebStaticSvgDollarSvg, map[string]*bintree{}},
					"double-quote-sans-left.svg":   &bintree{dataWebStaticSvgDoubleQuoteSansLeftSvg, map[string]*bintree{}},
					"double-quote-sans-right.svg":  &bintree{dataWebStaticSvgDoubleQuoteSansRightSvg, map[string]*bintree{}},
					"double-quote-serif-left.svg":  &bintree{dataWebStaticSvgDoubleQuoteSerifLeftSvg, map[string]*bintree{}},
					"double-quote-serif-right.svg": &bintree{dataWebStaticSvgDoubleQuoteSerifRightSvg, map[string]*bintree{}},
					"droplet.svg":                  &bintree{dataWebStaticSvgDropletSvg, map[string]*bintree{}},
					"eject.svg":                    &bintree{dataWebStaticSvgEjectSvg, map[string]*bintree{}},
					"elevator.svg":                 &bintree{dataWebStaticSvgElevatorSvg, map[string]*bintree{}},
					"ellipses.svg":                 &bintree{dataWebStaticSvgEllipsesSvg, map[string]*bintree{}},
					"envelope-closed.svg":          &bintree{dataWebStaticSvgEnvelopeClosedSvg, map[string]*bintree{}},
					"envelope-open.svg":            &bintree{dataWebStaticSvgEnvelopeOpenSvg, map[string]*bintree{}},
					"euro.svg":                     &bintree{dataWebStaticSvgEuroSvg, map[string]*bintree{}},
					"excerpt.svg":                  &bintree{dataWebStaticSvgExcerptSvg, map[string]*bintree{}},
					"expand-down.svg":              &bintree{dataWebStaticSvgExpandDownSvg, map[string]*bintree{}},
					"expand-left.svg":              &bintree{dataWebStaticSvgExpandLeftSvg, map[string]*bintree{}},
					"expand-right.svg":             &bintree{dataWebStaticSvgExpandRightSvg, map[string]*bintree{}},
					"expand-up.svg":                &bintree{dataWebStaticSvgExpandUpSvg, map[string]*bintree{}},
					"external-link.svg":            &bintree{dataWebStaticSvgExternalLinkSvg, map[string]*bintree{}},
					"eye.svg":                      &bintree{dataWebStaticSvgEyeSvg, map[string]*bintree{}},
					"eyedropper.svg":               &bintree{dataWebStaticSvgEyedropperSvg, map[string]*bintree{}},
					"file.svg":                     &bintree{dataWebStaticSvgFileSvg, map[string]*bintree{}},
					"fire.svg":                     &bintree{dataWebStaticSvgFireSvg, map[string]*bintree{}},
					"flag.svg":                     &bintree{dataWebStaticSvgFlagSvg, map[string]*bintree{}},
					"flash.svg":                    &bintree{dataWebStaticSvgFlashSvg, map[string]*bintree{}},
					"folder.svg":                   &bintree{dataWebStaticSvgFolderSvg, map[string]*bintree{}},
					"fork.svg":                     &bintree{dataWebStaticSvgForkSvg, map[string]*bintree{}},
					"fullscreen-enter.svg":         &bintree{dataWebStaticSvgFullscreenEnterSvg, map[string]*bintree{}},
					"fullscreen-exit.svg":          &bintree{dataWebStaticSvgFullscreenExitSvg, map[string]*bintree{}},
					"globe.svg":                    &bintree{dataWebStaticSvgGlobeSvg, map[string]*bintree{}},
					"graph.svg":                    &bintree{dataWebStaticSvgGraphSvg, map[string]*bintree{}},
					"grid-four-up.svg":             &bintree{dataWebStaticSvgGridFourUpSvg, map[string]*bintree{}},
					"grid-three-up.svg":            &bintree{dataWebStaticSvgGridThreeUpSvg, map[string]*bintree{}},
					"grid-two-up.svg":              &bintree{dataWebStaticSvgGridTwoUpSvg, map[string]*bintree{}},
					"hard-drive.svg":               &bintree{dataWebStaticSvgHardDriveSvg, map[string]*bintree{}},
					"header.svg":                   &bintree{dataWebStaticSvgHeaderSvg, map[string]*bintree{}},
					"headphones.svg":               &bintree{dataWebStaticSvgHeadphonesSvg, map[string]*bintree{}},
					"heart.svg":                    &bintree{dataWebStaticSvgHeartSvg, map[string]*bintree{}},
					"home.svg":                     &bintree{dataWebStaticSvgHomeSvg, map[string]*bintree{}},
					"image.svg":                    &bintree{dataWebStaticSvgImageSvg, map[string]*bintree{}},
					"inbox.svg":                    &bintree{dataWebStaticSvgInboxSvg, map[string]*bintree{}},
					"infinity.svg":                 &bintree{dataWebStaticSvgInfinitySvg, map[string]*bintree{}},
					"info.svg":                     &bintree{dataWebStaticSvgInfoSvg, map[string]*bintree{}},
					"italic.svg":                   &bintree{dataWebStaticSvgItalicSvg, map[string]*bintree{}},
					"justify-center.svg":           &bintree{dataWebStaticSvgJustifyCenterSvg, map[string]*bintree{}},
					"justify-left.svg":             &bintree{dataWebStaticSvgJustifyLeftSvg, map[string]*bintree{}},
					"justify-right.svg":            &bintree{dataWebStaticSvgJustifyRightSvg, map[string]*bintree{}},
					"key.svg":                      &bintree{dataWebStaticSvgKeySvg, map[string]*bintree{}},
					"laptop.svg":                   &bintree{dataWebStaticSvgLaptopSvg, map[string]*bintree{}},
					"layers.svg":                   &bintree{dataWebStaticSvgLayersSvg, map[string]*bintree{}},
					"lightbulb.svg":                &bintree{dataWebStaticSvgLightbulbSvg, map[string]*bintree{}},
					"link-broken.svg":              &bintree{dataWebStaticSvgLinkBrokenSvg, map[string]*bintree{}},
					"link-intact.svg":              &bintree{dataWebStaticSvgLinkIntactSvg, map[string]*bintree{}},
					"list-rich.svg":                &bintree{dataWebStaticSvgListRichSvg, map[string]*bintree{}},
					"list.svg":                     &bintree{dataWebStaticSvgListSvg, map[string]*bintree{}},
					"location.svg":                 &bintree{dataWebStaticSvgLocationSvg, map[string]*bintree{}},
					"lock-locked.svg":              &bintree{dataWebStaticSvgLockLockedSvg, map[string]*bintree{}},
					"lock-unlocked.svg":            &bintree{dataWebStaticSvgLockUnlockedSvg, map[string]*bintree{}},
					"loop-circular.svg":            &bintree{dataWebStaticSvgLoopCircularSvg, map[string]*bintree{}},
					"loop-square.svg":              &bintree{dataWebStaticSvgLoopSquareSvg, map[string]*bintree{}},
					"loop.svg":                     &bintree{dataWebStaticSvgLoopSvg, map[string]*bintree{}},
					"magnifying-glass.svg":         &bintree{dataWebStaticSvgMagnifyingGlassSvg, map[string]*bintree{}},
					"map-marker.svg":               &bintree{dataWebStaticSvgMapMarkerSvg, map[string]*bintree{}},
					"map.svg":                      &bintree{dataWebStaticSvgMapSvg, map[string]*bintree{}},
					"media-pause.svg":              &bintree{dataWebStaticSvgMediaPauseSvg, map[string]*bintree{}},
					"media-play.svg":               &bintree{dataWebStaticSvgMediaPlaySvg, map[string]*bintree{}},
					"media-record.svg":             &bintree{dataWebStaticSvgMediaRecordSvg, map[string]*bintree{}},
					"media-skip-backward.svg":      &bintree{dataWebStaticSvgMediaSkipBackwardSvg, map[string]*bintree{}},
					"media-skip-forward.svg":       &bintree{dataWebStaticSvgMediaSkipForwardSvg, map[string]*bintree{}},
					"media-step-backward.svg":      &bintree{dataWebStaticSvgMediaStepBackwardSvg, map[string]*bintree{}},
					"media-step-forward.svg":       &bintree{dataWebStaticSvgMediaStepForwardSvg, map[string]*bintree{}},
					"media-stop.svg":               &bintree{dataWebStaticSvgMediaStopSvg, map[string]*bintree{}},
					"medical-cross.svg":            &bintree{dataWebStaticSvgMedicalCrossSvg, map[string]*bintree{}},
					"menu.svg":                     &bintree{dataWebStaticSvgMenuSvg, map[string]*bintree{}},
					"microphone.svg":               &bintree{dataWebStaticSvgMicrophoneSvg, map[string]*bintree{}},
					"minus.svg":                    &bintree{dataWebStaticSvgMinusSvg, map[string]*bintree{}},
					"monitor.svg":                  &bintree{dataWebStaticSvgMonitorSvg, map[string]*bintree{}},
					"moon.svg":                     &bintree{dataWebStaticSvgMoonSvg, map[string]*bintree{}},
					"move.svg":                     &bintree{dataWebStaticSvgMoveSvg, map[string]*bintree{}},
					"musical-note.svg":             &bintree{dataWebStaticSvgMusicalNoteSvg, map[string]*bintree{}},
					"paperclip.svg":                &bintree{dataWebStaticSvgPaperclipSvg, map[string]*bintree{}},
					"pencil.svg":                   &bintree{dataWebStaticSvgPencilSvg, map[string]*bintree{}},
					"people.svg":                   &bintree{dataWebStaticSvgPeopleSvg, map[string]*bintree{}},
					"person.svg":                   &bintree{dataWebStaticSvgPersonSvg, map[string]*bintree{}},
					"phone.svg":                    &bintree{dataWebStaticSvgPhoneSvg, map[string]*bintree{}},
					"pie-chart.svg":                &bintree{dataWebStaticSvgPieChartSvg, map[string]*bintree{}},
					"pin.svg":                      &bintree{dataWebStaticSvgPinSvg, map[string]*bintree{}},
					"play-circle.svg":              &bintree{dataWebStaticSvgPlayCircleSvg, map[string]*bintree{}},
					"plus.svg":                     &bintree{dataWebStaticSvgPlusSvg, map[string]*bintree{}},
					"power-standby.svg":            &bintree{dataWebStaticSvgPowerStandbySvg, map[string]*bintree{}},
					"print.svg":                    &bintree{dataWebStaticSvgPrintSvg, map[string]*bintree{}},
					"project.svg":                  &bintree{dataWebStaticSvgProjectSvg, map[string]*bintree{}},
					"pulse.svg":                    &bintree{dataWebStaticSvgPulseSvg, map[string]*bintree{}},
					"puzzle-piece.svg":             &bintree{dataWebStaticSvgPuzzlePieceSvg, map[string]*bintree{}},
					"question-mark.svg":            &bintree{dataWebStaticSvgQuestionMarkSvg, map[string]*bintree{}},
					"rain.svg":                     &bintree{dataWebStaticSvgRainSvg, map[string]*bintree{}},
					"random.svg":                   &bintree{dataWebStaticSvgRandomSvg, map[string]*bintree{}},
					"reload.svg":                   &bintree{dataWebStaticSvgReloadSvg, map[string]*bintree{}},
					"resize-both.svg":              &bintree{dataWebStaticSvgResizeBothSvg, map[string]*bintree{}},
					"resize-height.svg":            &bintree{dataWebStaticSvgResizeHeightSvg, map[string]*bintree{}},
					"resize-width.svg":             &bintree{dataWebStaticSvgResizeWidthSvg, map[string]*bintree{}},
					"rss-alt.svg":                  &bintree{dataWebStaticSvgRssAltSvg, map[string]*bintree{}},
					"rss.svg":                      &bintree{dataWebStaticSvgRssSvg, map[string]*bintree{}},
					"script.svg":                   &bintree{dataWebStaticSvgScriptSvg, map[string]*bintree{}},
					"share-boxed.svg":              &bintree{dataWebStaticSvgShareBoxedSvg, map[string]*bintree{}},
					"share.svg":                    &bintree{dataWebStaticSvgShareSvg, map[string]*bintree{}},
					"shield.svg":                   &bintree{dataWebStaticSvgShieldSvg, map[string]*bintree{}},
					"signal.svg":                   &bintree{dataWebStaticSvgSignalSvg, map[string]*bintree{}},
					"signpost.svg":                 &bintree{dataWebStaticSvgSignpostSvg, map[string]*bintree{}},
					"sort-ascending.svg":           &bintree{dataWebStaticSvgSortAscendingSvg, map[string]*bintree{}},
					"sort-descending.svg":          &bintree{dataWebStaticSvgSortDescendingSvg, map[string]*bintree{}},
					"spreadsheet.svg":              &bintree{dataWebStaticSvgSpreadsheetSvg, map[string]*bintree{}},
					"star.svg":                     &bintree{dataWebStaticSvgStarSvg, map[string]*bintree{}},
					"sun.svg":                      &bintree{dataWebStaticSvgSunSvg, map[string]*bintree{}},
					"tablet.svg":                   &bintree{dataWebStaticSvgTabletSvg, map[string]*bintree{}},
					"tag.svg":                      &bintree{dataWebStaticSvgTagSvg, map[string]*bintree{}},
					"tags.svg":                     &bintree{dataWebStaticSvgTagsSvg, map[string]*bintree{}},
					"target.svg":                   &bintree{dataWebStaticSvgTargetSvg, map[string]*bintree{}},
					"task.svg":                     &bintree{dataWebStaticSvgTaskSvg, map[string]*bintree{}},
					"terminal.svg":                 &bintree{dataWebStaticSvgTerminalSvg, map[string]*bintree{}},
					"text.svg":                     &bintree{dataWebStaticSvgTextSvg, map[string]*bintree{}},
					"thumb-down.svg":               &bintree{dataWebStaticSvgThumbDownSvg, map[string]*bintree{}},
					"thumb-up.svg":                 &bintree{dataWebStaticSvgThumbUpSvg, map[string]*bintree{}},
					"timer.svg":                    &bintree{dataWebStaticSvgTimerSvg, map[string]*bintree{}},
					"transfer.svg":                 &bintree{dataWebStaticSvgTransferSvg, map[string]*bintree{}},
					"trash.svg":                    &bintree{dataWebStaticSvgTrashSvg, map[string]*bintree{}},
					"underline.svg":                &bintree{dataWebStaticSvgUnderlineSvg, map[string]*bintree{}},
					"vertical-align-bottom.svg":    &bintree{dataWebStaticSvgVerticalAlignBottomSvg, map[string]*bintree{}},
					"vertical-align-center.svg":    &bintree{dataWebStaticSvgVerticalAlignCenterSvg, map[string]*bintree{}},
					"vertical-align-top.svg":       &bintree{dataWebStaticSvgVerticalAlignTopSvg, map[string]*bintree{}},
					"video.svg":                    &bintree{dataWebStaticSvgVideoSvg, map[string]*bintree{}},
					"volume-high.svg":              &bintree{dataWebStaticSvgVolumeHighSvg, map[string]*bintree{}},
					"volume-low.svg":               &bintree{dataWebStaticSvgVolumeLowSvg, map[string]*bintree{}},
					"volume-off.svg":               &bintree{dataWebStaticSvgVolumeOffSvg, map[string]*bintree{}},
					"warning.svg":                  &bintree{dataWebStaticSvgWarningSvg, map[string]*bintree{}},
					"wifi.svg":                     &bintree{dataWebStaticSvgWifiSvg, map[string]*bintree{}},
					"wrench.svg":                   &bintree{dataWebStaticSvgWrenchSvg, map[string]*bintree{}},
					"x.svg":                        &bintree{dataWebStaticSvgXSvg, map[string]*bintree{}},
					"yen.svg":                      &bintree{dataWebStaticSvgYenSvg, map[string]*bintree{}},
					"zoom-in.svg":                  &bintree{dataWebStaticSvgZoomInSvg, map[string]*bintree{}},
					"zoom-out.svg":                 &bintree{dataWebStaticSvgZoomOutSvg, map[string]*bintree{}},
				}},
			}},
			"templates": &bintree{nil, map[string]*bintree{
				"403.tpl":            &bintree{dataWebTemplates403Tpl, map[string]*bintree{}},
				"layout.tpl":         &bintree{dataWebTemplatesLayoutTpl, map[string]*bintree{}},
				"node-children.tpl":  &bintree{dataWebTemplatesNodeChildrenTpl, map[string]*bintree{}},
				"node-content.tpl":   &bintree{dataWebTemplatesNodeContentTpl, map[string]*bintree{}},
				"search-results.tpl": &bintree{dataWebTemplatesSearchResultsTpl, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
